<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>net.whydah.service</groupId>
	<artifactId>Whydah-OAuth2Service</artifactId>
	<name>Whydah-OAuth2Service</name>
	<version>2.31.7</version>
	<url>https://wiki.cantara.no/display/whydah/OAuth2Service</url>
	<parent>
		<groupId>no.cantara.emi</groupId>
		<artifactId>parent</artifactId>
		<version>8</version>
	</parent>
	<properties>
		<jdk.version>21</jdk.version>
		<service.name>Whydah-OAuth2Service</service.name>
		<whydah-admin-sdk-version>2.31.2</whydah-admin-sdk-version>
		<jersey.version>3.1.11</jersey.version>
		<jetty.version>12.0.20</jetty.version>
		<slf4j.version>2.0.17</slf4j.version>
		<hystrix.version>1.5.18</hystrix.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<maven.compiler.release>21</maven.compiler.release>
		<java.version>21</java.version>
		<maven.javadoc.skip>true</maven.javadoc.skip>
	</properties>
	<scm>
		<developerConnection>
			scm:git:ssh://git@github.com/cantara/Whydah-OAuth2Service.git</developerConnection>
		<connection>scm:git:https://github.com/cantara/Whydah-OAuth2Service.git</connection>
		<url>https://wiki.cantara.no/display/whydah/OAuth2Service</url>
		<tag>Whydah-OAuth2Service-2.31.7</tag>
	</scm>
	<developers>
		<developer>
			<id>totto</id>
			<name>Thor Henning Hetland</name>
			<email>totto@totto.org</email>
			<roles>
				<role>Developer</role>
			</roles>
			<organization>Cantara</organization>
			<organizationUrl>
				https://wiki.cantara.no/display/whydah/OAuth2Service</organizationUrl>
		</developer>
	</developers>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>5.13.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>5.13.4</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.platform</groupId>
				<artifactId>junit-platform-engine</artifactId>
				<version>1.13.4</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>3.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.whydah.sso</groupId>
			<artifactId>Whydah-Admin-SDK</artifactId>
			<version>${whydah-admin-sdk-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.constretto</groupId>
					<artifactId>constretto-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.constretto</groupId>
					<artifactId>constretto-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.valuereporter</groupId>
			<artifactId>valuereporter-agent</artifactId>
			<version>1.10.18</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>11.0.26</version>
		</dependency>
		
		<!-- Jersey Core Dependencies -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-common</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		
		<!-- HK2 Dependency Injection -->
		<dependency>
			<groupId>org.glassfish.hk2</groupId>
			<artifactId>hk2</artifactId>
			<version>3.1.1</version>
		</dependency>
		<!-- This is the crucial missing dependency for Jersey HK2 integration -->
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
			<version>${jersey.version}</version>
		</dependency>
		
		<!-- MVC and Freemarker -->
		<dependency>
			<groupId>org.glassfish.jersey.ext</groupId>
			<artifactId>jersey-mvc-freemarker</artifactId>
			<version>${jersey.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.freemarker</groupId>
					<artifactId>freemarker</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.34</version>
		</dependency>
		
		<!-- JAX-B and Validation -->
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>4.0.5</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
		</dependency>
		
		<!-- JSON and Serialization -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.13.1</version>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.json</artifactId>
			<version>1.1.4</version>
		</dependency>
		
		<!-- Other Dependencies -->
		<dependency>
			<groupId>com.thoughtworks.paranamer</groupId>
			<artifactId>paranamer</artifactId>
			<version>2.8.3</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.hystrix</groupId>
			<artifactId>hystrix-core</artifactId>
			<version>${hystrix.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.9.0</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.5.18</version>
		</dependency>
		
		<!-- JWT and Security -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.13.0</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>10.4.2</version>
		</dependency>
		
		<!-- Jakarta EE APIs -->
		<dependency>
			<groupId>jakarta.inject</groupId>
			<artifactId>jakarta.inject-api</artifactId>
			<version>2.0.1.MR</version>
		</dependency>
		
		<!-- Hazelcast -->
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast-all</artifactId>
			<version>4.2.8</version>
		</dependency>
		
		<!-- Test Dependencies -->
		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<version>1.5.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>5.13.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.13.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>1.13.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured-all</artifactId>
			<version>5.5.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>5.5.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.19.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<artifactSet>
								<excludes>
									<exclude>junit:junit</exclude>
									<exclude>org.junit.jupiter:junit-jupiter</exclude>
									<exclude>org.junit.vintage:junit-vintage-engine</exclude>
									<exclude>org.junit.platform:junit-platform-engine</exclude>
								</excludes>
							</artifactSet>
							<transformers>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>net.whydah.service.Main</Main-Class>
									</manifestEntries>
								</transformer>
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<!-- Important: Add HK2 service transformers -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
									<resource>META-INF/hk2-locator/default</resource>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- ... rest of your build plugins remain the same ... -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>2.1.0</version>
				<configuration>
					<repositoryLayout>flat</repositoryLayout>
					<includeConfigurationDirectoryInClasspath>false</includeConfigurationDirectoryInClasspath>
					<target>${project.build.directory}</target>
					<daemons>
						<daemon>
							<id>${project.name}</id>
							<mainClass>net.whydah.service.Main</mainClass>
							<platforms>
								<platform>jsw</platform>
							</platforms>
							<generatorConfigurations>
								<generatorConfiguration>
									<generator>jsw</generator>
									<includes>
										<include>windows-x86-64</include>
									</includes>
									<configuration>
										<property>
											<name>configuration.directory.in.classpath.first</name>
											<value>config_override</value>
										</property>
										<property>
											<name>set.default.REPO_DIR</name>
											<value>lib</value>
										</property>
										<property>
											<name>wrapper.logfile</name>
											<value>logs/wrapper.log</value>
										</property>
										<property>
											<name>wrapper.console.title</name>
											<value>${service.name}</value>
										</property>
										<property>
											<name>wrapper.ntservice.name</name>
											<value>${service.name}</value>
										</property>
										<property>
											<name>wrapper.ntservice.displayname</name>
											<value>${service.name}</value>
										</property>
									</configuration>
								</generatorConfiguration>
							</generatorConfigurations>
							<jvmSettings>
								<initialMemorySize>32M</initialMemorySize>
								<maxMemorySize>512M</maxMemorySize>
								<extraArguments>
									<extraArgument>-XX:PermSize=32m</extraArgument>
									<extraArgument>-XX:MaxPermSize=32m</extraArgument>
									<extraArgument>-DIAM_MODE=PROD</extraArgument>
									<extraArgument>-DIAM_CONFIG=config_override/microservice-baseline.PROD.properties</extraArgument>
								</extraArguments>
							</jvmSettings>
						</daemon>
					</daemons>
				</configuration>
				<executions>
					<execution>
						<id>generate-jsw-scripts</id>
						<phase>package</phase>
						<goals>
							<goal>generate-daemons</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>assemble-zip</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>cantara-releases</id>
			<name>Cantara Release Repository</name>
			<url>https://mvnrepo.cantara.no/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>cantara-snapshots</id>
			<name>Cantara Snapshot Repository</name>
			<url>https://mvnrepo.cantara.no/content/repositories/snapshots/</url>
		</repository>
	</repositories>
</project>